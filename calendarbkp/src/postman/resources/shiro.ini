# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

#redisManager
redisManager=com.ws.shiro.RedisManager
#optional if you don't specify host the default value is 127.0.0.1
redisManager.host=10.42.51.100
#optional , default value: 6379
redisManager.port=6379
#optional, default value:0 .The expire time is in second
redisManager.expire=1000
#optional, timeout for jedis try to connect to redis server(In milliseconds), not equals to expire time!
redisManager.timeout=0
#optional, password for redis server
#redisManager.password=
#============redisSessionDAO=============
redisSessionDAO=com.ws.shiro.RedisSessionDAO
redisSessionDAO.redisManager=$redisManager
sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionManager.sessionDAO=$redisSessionDAO
securityManager=com.ws.calendar.MockedSecurityManager
securityManager.sessionManager=$sessionManager

#============redisCacheManager===========
cacheManager=com.ws.shiro.RedisCacheManager
cacheManager.redisManager=$redisManager
#custom your redis key prefix, if you doesn't define this parameter shiro-redis will use 'shiro_redis_session:' as default prefix
#cacheManager.keyPrefix=users:security:authz:
securityManager.cacheManager=$cacheManager

authRealm=com.ws.commons.server.accesscontrol.RestAuthorizationRealm

securityManager.realm=$authRealm


[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.
admin@teste.com=123, admin
viewer@teste.com=123, viewer

[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.
admin=*
viewer=*:*:read

[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation
[urls]